"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/schedule/page",{

/***/ "(app-pages-browser)/./app/lib/date-utils.ts":
/*!*******************************!*\
  !*** ./app/lib/date-utils.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatDateForAPI: function() { return /* binding */ formatDateForAPI; },\n/* harmony export */   formatDateForForm: function() { return /* binding */ formatDateForForm; },\n/* harmony export */   formatDisplayDate: function() { return /* binding */ formatDisplayDate; }\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! __barrel_optimize__?names=format!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/esm/format/index.js\");\n\n/**\n * Formats a date for display consistently\n */ function formatDisplayDate(date) {\n    let formatString = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"MMM d, yyyy\";\n    // If date is a string, convert to Date object\n    const dateObj = typeof date === \"string\" ? new Date(date) : date;\n    // Format the date\n    return (0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(dateObj, formatString);\n}\n/**\n * Formats a date from the database for form input (YYYY-MM-DD)\n * Ensures the date displayed in the form matches what's in the database\n */ function formatDateForForm(date) {\n    // If date is a string, convert to Date object\n    const dateObj = typeof date === \"string\" ? new Date(date) : date;\n    // Format as YYYY-MM-DD\n    return dateObj.toISOString().split(\"T\")[0];\n}\n/**\n * Ensures consistent date format for API\n * This preserves the exact date selected by the user\n */ function formatDateForAPI(dateString) {\n    console.log(\"Original date string:\", dateString);\n    // Parse the date string (YYYY-MM-DD) into parts\n    const [year, month, day] = dateString.split(\"-\").map(Number);\n    // Create a new date with the same year, month, and day\n    // Month is 0-indexed in JavaScript Date\n    const date = new Date(year, month - 1, day, 12, 0, 0);\n    console.log(\"Parsed date object:\", date);\n    console.log(\"ISO string:\", date.toISOString());\n    // Return ISO string\n    return date.toISOString();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9saWIvZGF0ZS11dGlscy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtDO0FBRWxDOztDQUVDLEdBQ00sU0FBU0Msa0JBQWtCQyxJQUFtQjtRQUFFQyxlQUFBQSxpRUFBdUI7SUFDNUUsOENBQThDO0lBQzlDLE1BQU1DLFVBQVUsT0FBT0YsU0FBUyxXQUFXLElBQUlHLEtBQUtILFFBQVFBO0lBRTVELGtCQUFrQjtJQUNsQixPQUFPRixrRkFBTUEsQ0FBQ0ksU0FBU0Q7QUFDekI7QUFFQTs7O0NBR0MsR0FDTSxTQUFTRyxrQkFBa0JKLElBQW1CO0lBQ25ELDhDQUE4QztJQUM5QyxNQUFNRSxVQUFVLE9BQU9GLFNBQVMsV0FBVyxJQUFJRyxLQUFLSCxRQUFRQTtJQUU1RCx1QkFBdUI7SUFDdkIsT0FBT0UsUUFBUUcsV0FBVyxHQUFHQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7QUFDNUM7QUFFQTs7O0NBR0MsR0FDTSxTQUFTQyxpQkFBaUJDLFVBQWtCO0lBQ2pEQyxRQUFRQyxHQUFHLENBQUMseUJBQXlCRjtJQUVyQyxnREFBZ0Q7SUFDaEQsTUFBTSxDQUFDRyxNQUFNQyxPQUFPQyxJQUFJLEdBQUdMLFdBQVdGLEtBQUssQ0FBQyxLQUFLUSxHQUFHLENBQUNDO0lBRXJELHVEQUF1RDtJQUN2RCx3Q0FBd0M7SUFDeEMsTUFBTWYsT0FBTyxJQUFJRyxLQUFLUSxNQUFNQyxRQUFRLEdBQUdDLEtBQUssSUFBSSxHQUFHO0lBRW5ESixRQUFRQyxHQUFHLENBQUMsdUJBQXVCVjtJQUNuQ1MsUUFBUUMsR0FBRyxDQUFDLGVBQWVWLEtBQUtLLFdBQVc7SUFFM0Msb0JBQW9CO0lBQ3BCLE9BQU9MLEtBQUtLLFdBQVc7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2xpYi9kYXRlLXV0aWxzLnRzP2QyODIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAnZGF0ZS1mbnMnO1xuXG4vKipcbiAqIEZvcm1hdHMgYSBkYXRlIGZvciBkaXNwbGF5IGNvbnNpc3RlbnRseVxuICovXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0RGlzcGxheURhdGUoZGF0ZTogRGF0ZSB8IHN0cmluZywgZm9ybWF0U3RyaW5nOiBzdHJpbmcgPSAnTU1NIGQsIHl5eXknKTogc3RyaW5nIHtcbiAgLy8gSWYgZGF0ZSBpcyBhIHN0cmluZywgY29udmVydCB0byBEYXRlIG9iamVjdFxuICBjb25zdCBkYXRlT2JqID0gdHlwZW9mIGRhdGUgPT09ICdzdHJpbmcnID8gbmV3IERhdGUoZGF0ZSkgOiBkYXRlO1xuICBcbiAgLy8gRm9ybWF0IHRoZSBkYXRlXG4gIHJldHVybiBmb3JtYXQoZGF0ZU9iaiwgZm9ybWF0U3RyaW5nKTtcbn1cblxuLyoqXG4gKiBGb3JtYXRzIGEgZGF0ZSBmcm9tIHRoZSBkYXRhYmFzZSBmb3IgZm9ybSBpbnB1dCAoWVlZWS1NTS1ERClcbiAqIEVuc3VyZXMgdGhlIGRhdGUgZGlzcGxheWVkIGluIHRoZSBmb3JtIG1hdGNoZXMgd2hhdCdzIGluIHRoZSBkYXRhYmFzZVxuICovXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0RGF0ZUZvckZvcm0oZGF0ZTogRGF0ZSB8IHN0cmluZyk6IHN0cmluZyB7XG4gIC8vIElmIGRhdGUgaXMgYSBzdHJpbmcsIGNvbnZlcnQgdG8gRGF0ZSBvYmplY3RcbiAgY29uc3QgZGF0ZU9iaiA9IHR5cGVvZiBkYXRlID09PSAnc3RyaW5nJyA/IG5ldyBEYXRlKGRhdGUpIDogZGF0ZTtcbiAgXG4gIC8vIEZvcm1hdCBhcyBZWVlZLU1NLUREXG4gIHJldHVybiBkYXRlT2JqLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXTtcbn1cblxuLyoqXG4gKiBFbnN1cmVzIGNvbnNpc3RlbnQgZGF0ZSBmb3JtYXQgZm9yIEFQSVxuICogVGhpcyBwcmVzZXJ2ZXMgdGhlIGV4YWN0IGRhdGUgc2VsZWN0ZWQgYnkgdGhlIHVzZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdERhdGVGb3JBUEkoZGF0ZVN0cmluZzogc3RyaW5nKTogc3RyaW5nIHtcbiAgY29uc29sZS5sb2coJ09yaWdpbmFsIGRhdGUgc3RyaW5nOicsIGRhdGVTdHJpbmcpO1xuICBcbiAgLy8gUGFyc2UgdGhlIGRhdGUgc3RyaW5nIChZWVlZLU1NLUREKSBpbnRvIHBhcnRzXG4gIGNvbnN0IFt5ZWFyLCBtb250aCwgZGF5XSA9IGRhdGVTdHJpbmcuc3BsaXQoJy0nKS5tYXAoTnVtYmVyKTtcbiAgXG4gIC8vIENyZWF0ZSBhIG5ldyBkYXRlIHdpdGggdGhlIHNhbWUgeWVhciwgbW9udGgsIGFuZCBkYXlcbiAgLy8gTW9udGggaXMgMC1pbmRleGVkIGluIEphdmFTY3JpcHQgRGF0ZVxuICBjb25zdCBkYXRlID0gbmV3IERhdGUoeWVhciwgbW9udGggLSAxLCBkYXksIDEyLCAwLCAwKTtcbiAgXG4gIGNvbnNvbGUubG9nKCdQYXJzZWQgZGF0ZSBvYmplY3Q6JywgZGF0ZSk7XG4gIGNvbnNvbGUubG9nKCdJU08gc3RyaW5nOicsIGRhdGUudG9JU09TdHJpbmcoKSk7XG4gIFxuICAvLyBSZXR1cm4gSVNPIHN0cmluZ1xuICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpO1xufSAiXSwibmFtZXMiOlsiZm9ybWF0IiwiZm9ybWF0RGlzcGxheURhdGUiLCJkYXRlIiwiZm9ybWF0U3RyaW5nIiwiZGF0ZU9iaiIsIkRhdGUiLCJmb3JtYXREYXRlRm9yRm9ybSIsInRvSVNPU3RyaW5nIiwic3BsaXQiLCJmb3JtYXREYXRlRm9yQVBJIiwiZGF0ZVN0cmluZyIsImNvbnNvbGUiLCJsb2ciLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJtYXAiLCJOdW1iZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/lib/date-utils.ts\n"));

/***/ })

});